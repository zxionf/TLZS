全屏

在Activity的onCreate方法中的 setContentView(myview)调用之前添加下面代码

requestWindowFeature(Window.FEATURE_NO_TITLE);//隐藏标题

getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,

WindowManager.LayoutParams.FLAG_FULLSCREEN);//设置全屏

横屏

按照下面代码示例修改Activity的onResume方法

@Override

protected void onResume() {
/**

* 设置为横屏

*/

if(getRequestedOrientation()!=ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE){
setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);

}

super.onResume();

}

或者在配置文件中对Activity节点添加android:screenOrientation属性(landscape是横向，portrait是纵向)

android:launchMode="singleTask" android:screenOrientation="portrait">

要设置成竖屏设置成 SCREEN_ORIENTATION_PORTRAIT

// —————-

常亮

view.setKeepScreenOn(true)

不加任何旋转屏幕的处理代码的时候，旋转屏幕将会导致系统把当前activity关闭，重新打开。

如果只是简单的界面调整，我们可以阻止此问题的发生，屏幕旋转而自己调整屏幕的元素重构。

首先我们需要修改AndroidManifest.xml文件：

//修改为：

这样是让程序能够响应旋转屏幕的事件。

然后重写onConfigurationChanged方法：

@Override

public void onConfigurationChanged(Configuration newConfig) {
// TODO Auto-generated method stub

super.onConfigurationChanged(newConfig);

Log.v(” == onConfigurationChanged”);

processLayout();

}

//—————————-

在我们用Android开发过程中， 会碰到Activity在切换到后台或布局从横屏LANDSCAPE切换到PORTRAIT，会重新切换Activity会触发一次onCreate方法。

在Android开发中这种情况视可以避免的，我们可以在androidmanifest.xml中的activit元素加入这个属性 android:configChanges=”orientation|keyboardHidden” 就能有效避免oncreat方法的重复加载，

androidmanifest.xml内容如下：红色字体为添加部分

同时在Activity的Java文件中重载onConfigurationChanged(Configuration newConfig)这个方法，这样就不会在布局切换或窗口切换时重载等方法。代码如下:

@Override

public void onConfigurationChanged(Configuration newConfig)

{
super.onConfigurationChanged(newConfig);

if (this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE)

{
//land

}

else if (this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT)

{
//port

}

}

//——————————————————

关于Android中Activity的横竖屏切换问题可以通过AndroidManifest.xml文件中的Activity来配置：

android:screenOrientation=["unspecified" | "user" | "behind" |

"landscape" | "portrait" |

"sensor" | "nonsensor"]

screenOrientation 用来指定Activity的在设备上显示的方向，每个值代表如下含义：

“unspecified“

默认值 由系统来判断显示方向.判定的策略是和设备相关的，所以不同的设备会有不同的显示方向.

“landscape“

横屏显示(宽比高要长)

“portrait“

竖屏显示(高比宽要长)

“user“

用户当前首选的方向

“behind“

和该Activity下面的那个Activity的方向一致(在Activity堆栈中的)

“sensor“

有物理的感应器来决定。如果用户旋转设备这屏幕会横竖屏切换。

“nosensor“

忽略物理感应器，这样就不会随着用户旋转设备而更改了 ( “unspecified“设置除外 )。

https://www.cnblogs.com/bluestorm/category/344568.html
